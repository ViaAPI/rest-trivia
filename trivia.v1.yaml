openapi: 3.0.0
tags:
  - name: models
  - name: Trivia
  - name: Panel
info:
  title: Trivia API
  version: v1.0.0
  license:
    name: Trivia
    url: 'https://www.viaapi.com/legal/licensing/trivia'
  contact:
    name: System Administrator
    email: admin@viaapi.com
    url: 'https://www.viaapi.com'
  termsOfService: 'https://www.viaapi.com/legal/tos/trivia'
  description: |-
    This documentation covers all endpoints related to trivia data store of ViaAPI.

    If you like to obtain our trivia data, you need to use one of the endpoints documented here.                 
servers:
  - url: 'https://trivia.api.viaapi.com/v1'
    description: Production
  - url: 'https://trivia.api.dev.viaapi.com/v1'
    description: Development / Testing Server
paths:
  '/questions/{region}/mc/sa':
    get:
      summary: List Multi-Choice Single Answer Questions
      responses:
        '200':
          description: Successful response.
          headers: {}
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '200.0000'
                    message: Your request has been successfully completed.
                    result:
                      pagination:
                        isCircular: true
                        prevLink: null
                        nextLink: offset=10&limit=10
                        lastLink: offset=90&limit=10
                        firstLink: offset=0&limit=10
                        totalItems: 1000
                        filteredItems: 100
                        itemsPerPage: 10
                        pageCount: 10
                        currentPage: 1
                      set:
                        - id: 5f7ae654f49cb6078151b14a
                          createdAt: '2020-10-05 09:24:21'
                          updatedAt: '2020-10-05 09:24:21'
                          status: w
                          banner: null
                          choices:
                            - isCorrect: false
                              label:
                                text: Finike
                                audio: null
                                image: null
                                video: null
                            - isCorrect: false
                              label:
                                text: Alanya
                                audio: null
                                image: null
                                video: null
                            - isCorrect: true
                              label:
                                text: Demre
                                audio: null
                                image: null
                                video: null
                            - isCorrect: false
                              label:
                                text: Aksu
                                audio: null
                                image: null
                                video: null
                          difficultyLevel: 6
                          estimatedReadTime: 32
                          tags:
                            - id: 5f7ae645f49cb6078151b135
                              createdAt: '2020-10-05 09:24:21'
                              updatedAt: '2020-10-05 09:24:21'
                              status: w
                              icon: null
                              itemCount: 0
                              title: myth
                          label:
                            text: Noel Baba efsanesinin Antalya'nın hangi ilçesinde yaşayan Psikopos Nikola'ya dayandığı düşünülmektedir?
                            audio: null
                            image: null
                            video: null
                    sessionToken: null
                Example-0404:
                  value:
                    code: '200.0404'
                    message: No recods found matching your criteria.
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '401.0000'
                    message: 'You must register your application before accessing this endpoint. Please check your API key. If problem persists, you can contact our support team.'
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '412.0000'
                    message: '"limit" parameter must be an integer value between 1 and 200.'
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
                Example-0002:
                  value:
                    code: '412.0002'
                    message: '"order" parameter has one or more unsupported operands. See related documentation for more information.'
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
                Example-0003:
                  value:
                    code: '412.0003'
                    message: '"order" parameter has one or more unsupported options. See related documentation for more information.'
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
                Example-9999:
                  value:
                    code: '412.9999'
                    message: 'The value, operands, or options are not valid for the createdAt. Please check related documentation for more information.'
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
                Example-0001:
                  value:
                    code: '412.0001'
                    message: '"offset" parameter has one or more unsupported operands. See related documentation for more information.'
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
      operationId: get-questions-mc-sa
      description: |-
        This endpoint provides a list of "multi-choice single correct answer" trivia questions. You can summon data filtered by the following prperties:
        - difficulty level
        - reading time
        - tags
        - status
        - creation time
        - update time

        You can search data based on the following properties:
        - label of question
        - label of choices

        This endpoint only provides the most up-to-date version of each document.

        ### Flow
        ![Flow](https://docs-viaapi.s3.amazonaws.com/flow-charts/get.questions.mc.sa.png)
      security:
        - X-Api-Key: []
      parameters:
        - schema:
            type: integer
            default: '50'
            maximum: 200
            minimum: 1
            exclusiveMinimum: false
          in: query
          name: limit
          description: |-
            Number of items to be returned. No more than 200 items can be returned at one query.<br />
            **Example:**
            ?limit=100
        - schema:
            type: integer
            minimum: 0
            default: '0'
          in: query
          name: offset
          description: |-
            The start point / row of the entries to be listed.<br />

            **Example:**
            ?offset=0
        - schema:
            type: array
            items:
              type: string
            maxItems: 0
            minItems: 0
            uniqueItems: false
          in: query
          name: order
          description: |-
            This parameter dictates the order of list.<br />
            **Operands:**<br />
            - `+`: ASCENDING
            - `-`: DESCENDING<br />
            **Available Options:**<br />
            - createdAt
            - updatedAt
            - id
            - difficultyLevel
            - label.text<br />
            **Example:**
            Sort questions by their labels ascending and by their creation time descending.<br />
            ?order[]=+label.text&order[]=-dateCreated
        - schema:
            type: array
            items:
              type: string
          in: query
          name: status
          description: |-
            This parameter is used to filter questions by their statuses.<br />

            **Example:**
            Only retrieve questions with status "a" or "w".<br />

            ?status[]=a&status[]=w
        - schema:
            type: array
            items:
              type: string
            minItems: 1
            maxItems: 2
          in: query
          name: createdAt
          description: |-
            This parameter is used to filter entries by their creation times.<br />
            **Acceptable Date Formats**:<br />
            - YYYY-MM-DD
            - YYYY-MM-DD HH:ii:ss<br />
            **Operands**:<br />
            - eq: Equal
            - gt: Greater Than
            - gte: Greater Than or Equal
            - lt: Less Than
            - lte: Less Than or Equal
            - nq: Not Equal
            - in: In
            - nin: Not In<br />
            **Example**:
            List entries created at 27th of January 2020.<br />

            ?createdAt[[eq]]=2020-01-27<br />

            List entries created between 21st and 27th of January 2020, both dates inclusive.<br />
            ?createdAt[[gte]]=2020-01-21&createdAt[[lte]]=2020-01-27
        - schema:
            items:
              type: string
              format: date-time
            type: array
          in: query
          name: updatedAt
          description: |-
            This parameter is used to filter entries by their update times.<br />
            **Acceptable Date Formats**:<br />
            - YYYY-MM-DD
            - YYYY-MM-DD HH:ii:ss<br />
            **Operands**:<br />
            - eq: Equal
            - gt: Greater Than
            - gte: Greater Than or Equal
            - lt: Less Than
            - lte: Less Than or Equal
            - nq: Not Equal<br />
            **Example**:
            List entries updated at 27th of January 2020.<br />

            ?updatedAt[[eq]]=2020-01-27<br />

            List entries updated between 21st and 27th of January 2020, both dates inclusive.<br />
            ?updatedAt[[gte]]=2020-01-21&updatedAt[[lte]]=2020-01-27
        - schema:
            type: array
            items:
              type: integer
          in: query
          name: difficultyLevel
          description: |-
            This parameter is used to filter entries by their difficulty level.<br />
            **Operands**:<br />
            - eq: Equal
            - gt: Greater Than
            - gte: Greater Than or Equal
            - lt: Less Than
            - lte: Less Than or Equal
            - nq: Not Equal
            - in: Use to summon arbitrary data.<br />
            **Example**:
            List entries marked with a difficulty level of 9.<br />

            ?difficultyLevel[[eq]]=9<br />

            List entries marked with a difficulty level between 2 and 4 inclusive.<br />
            ?difficultyLevel[[gte]]=2&difficultyLevel[lte]=4<br />

            List entries marked with a difficulty level of 3, 5 and 8.<br />
            ?difficultyLevel[[in]]=3,5,8
        - schema:
            type: array
            items:
              type: integer
          in: query
          name: estimatedReadingTime
          description: |-
            This parameter is used to filter entries by their estimated reading time.<br />
            **Operands**:<br />
            - eq: Equal
            - gt: Greater Than
            - gte: Greater Than or Equal
            - lt: Less Than
            - lte: Less Than or Equal
            - nq: Not Equal<br />
            **Example**:
            List entries that can be read within 30 seconds.<br />

            ?estimatedReadingTime[[eq]]=30<br />

            List entries that can be read less than 30 seconds.<br />
            ?estimatedReadingTime[[lt]]=30

            List entriesthat can be read beween 30 to 60 seconds inclusive<br />
            ?estimatedReadingTime[[gte]]=30&estimatedReadingTime[[lte]]=60
        - schema:
            type: array
            items:
              type: string
          in: query
          name: q
          description: |-
            This parameter is used to run a search within the question or choice labels.<br />
            **Keys**:
            - cho: choice
            - qst: question<br />
            **Operands**:
            - `*`: Wildcard<br />
            **Example**:
            Search questions with choice labels starting with "Bruce".<br />
            ?q[[cho]][]=Bruce\*

            Search questions with labels include "Batman"<br />
            ?q[[qst]][]=\*Batman\*

            Search questions with labels include "Batman" or with choice labels equal to "Michael Keaton"<br />
            ?q[[qst]][]=\*Batman\*&q[[cho]][]=Michael%20Keaton
        - schema:
            type: array
          in: query
          name: tags
          description: |-
            This parameter is used to filter entries by their tags.<br />
            **Operands**:
            - eq: Equal
            - gt: Greater Than
            - gte: Greater Than or Equal
            - lt: Less Than
            - lte: Less Than or Equal
            - nq: Not Equal
            - in: Use to summon arbitrary data.<br />
            **Example**:

            List entriestagged with tag of id 9.<br />

            ?tags[[eq]]=9<br />

            List entries taged with a tags of ids 3, 5 or 8.<br />
            ?tags[[in]]=3,5,8
      tags:
        - Trivia
    parameters:
      - schema:
          type: string
          enum:
            - tr-tr
            - en-use
          default: tr-tr
        name: region
        in: path
        required: true
        description: 'see [documentation](https://archbee.io/public/3geArFXiTaFdM3kcfky7E/region-codes)'
  '/tags/{region}':
    get:
      summary: List Trivia Tags
      responses:
        '200':
          description: Successful response.
          headers: {}
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example:
                  value:
                    code: '200.0000'
                    message: ''
                    result:
                      pagination:
                        isCircular: true
                        prevLink: null
                        nextLink: offset=10&limit=10
                        lastLink: offset=90&limit=10
                        firstLink: offset=0&limit=10
                        totalItems: 1000
                        filteredItems: 100
                        itemsPerPage: 10
                        pageCount: 10
                        currentPage: 1
                    set:
                      - icon: soccer.svg
                        title: soccer
                        itemCount: 2322
                        uuid: b914edfb-dadb-49f0-a729-08e882987e38
                      - icon: history.svg
                        title: history
                        itemCount: 342
                        uuid: 91bf5e5a-be48-400c-ac57-8c4dfdc6b283
            application/xml:
              schema:
                type: object
                properties: {}
              examples: {}
      operationId: get-tags
      description: This endpoint returns a list of tags (TQTag objects) that are used to classify trivia questions.
      security:
        - X-Api-Key: []
      parameters:
        - schema:
            type: integer
            default: '50'
            maximum: 200
            minimum: 1
            exclusiveMinimum: false
          in: query
          name: limit
          description: |-
            Number of items to be returned. No more than 200 items can be returned at one query.<br />
            **Example:**
            ?limit=100
        - schema:
            type: integer
            minimum: 0
            default: '0'
          in: query
          name: offset
          description: |-
            The start point / row of the entries to be listed.<br />

            **Example:**
            ?offset=0
        - schema:
            type: array
            items:
              type: string
            maxItems: 0
            minItems: 0
            uniqueItems: false
          in: query
          name: order
          description: |-
            This parameter dictates the order of list.<br />
            **Operands:**
            - `+`: ASCENDING
            - `-`: DESCENDING<br />
            **Available Options:**
            - createdAt
            - updatedAt
            - title
            - itemCount<br />
            **Example:**
            Sort data by their title ascending and by their creation time descending.<br />
            ?order[]=+title&order[]=-createdAt
        - schema:
            type: array
            items:
              type: string
          in: query
          name: status
          description: |-
            This parameter is used to filter questions by their statuses.<br />

            **Example:**
            Only retrieve questions with status "a" or "w".<br />

            ?status[]=a&status[]=w
        - schema:
            type: array
            items:
              type: string
            minItems: 1
            maxItems: 2
          in: query
          name: createdAt
          description: |-
            This parameter is used to filter entries by their creation times.<br />
            **Acceptable Date Formats**:
            - YYYY-MM-DD
            - YYYY-MM-DD HH:ii:ss<br />
            **Operands**:
            - eq: Equal
            - gt: Greater Than
            - gte: Greater Than or Equal
            - lt: Less Than
            - lte: Less Than or Equal
            - nq: Not Equal
            - in: In
            - nin: Not In<br />
            **Example**:
            List entries created at 27th of January 2020.<br />

            ?createdAt[[eq]]=2020-01-27<br />

            List entries created between 21st and 27th of January 2020, both dates inclusive.<br />
            ?createdAt[[gte]]=2020-01-21&createdAt[[lte]]=2020-01-27
        - schema:
            items:
              type: string
              format: date-time
            type: array
          in: query
          name: updatedAt
          description: |-
            This parameter is used to filter entries by their update times.<br />
            **Acceptable Date Formats**:
            - YYYY-MM-DD
            - YYYY-MM-DD HH:ii:ss<br />
            **Operands**:
            - eq: Equal
            - gt: Greater Than
            - gte: Greater Than or Equal
            - lt: Less Than
            - lte: Less Than or Equal
            - nq: Not Equal<br />
            **Example**:
            List entries updated at 27th of January 2020.<br />

            ?updatedAt[[eq]]=2020-01-27<br />

            List entries updated between 21st and 27th of January 2020, both dates inclusive.<br />
            ?updatedAt[[gte]]=2020-01-21&updatedAt[[lte]]=2020-01-27
        - schema:
            type: array
            items:
              type: string
          in: query
          name: q
          description: |-
            This parameter is used to run a search within the question or choice labels.<br />
            **Keys**:
            - title: title<br />
            **Operands**:
            - `*`: Wildcard<br />
            **Example**:
            Search tags with title starting with "hist".<br />
            ?q[[title]][]=hist\*<br />

            Search tags with labels include "tera"<br />
            ?q[[title]][]=\*tera\*

            Search tags with titles include "tera" or with title equal to "literature"<br />
            ?q[[title]][]=\*tera\*&q[[title]][]=literature

            <!-- theme: warning -->
            > **Alternative Usage**<br/>
            > Also we can use **?q={"title": [["tera*"]]}**
        - schema:
            type: array
          in: query
          name: itemCount
          description: |-
            This parameter is used to filter entries by item counts.<br />

            **Operands**:
            - eq: Equal
            - gt: Greater Than
            - gte: Greater Than or Equal
            - lt: Less Than
            - lte: Less Than or Equal<br />

            **Example**:
            List entries with item counts between 5 and 10.<br />

            ?itemCount[[gte]]=5&itemCount[[lte]]=10
      tags:
        - Trivia
    parameters:
      - schema:
          type: string
          enum:
            - tr-tr
            - tr-nc
            - ru-ru
            - es-es
            - fr-fr
            - es-ln
            - es-xx
            - en-xx
            - en-us
            - en-uk
            - de-at
            - de-de
          default: tr-tr
          example: tr-tr
        name: region
        in: path
        required: true
        description: 'see [documentation](https://archbee.io/public/3geArFXiTaFdM3kcfky7E/region-codes)'
  '/question/{region}/mc/sa/{uuid}':
    parameters:
      - schema:
          type: string
        name: uuid
        in: path
        required: true
        description: System attained id of the question.
      - schema:
          type: string
          enum:
            - tr-tr
            - en-us
          default: tr-tr
        name: region
        in: path
        required: true
        description: 'see [documentation](https://archbee.io/public/3geArFXiTaFdM3kcfky7E/region-codes)'
    put:
      summary: Update Existing Multi-Choice Single Answer Question
      operationId: put-questions-mc-sa-uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example:
                  value:
                    code: '200.0000'
                    message: Your request has been successfully completed.
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
      description: |-
        This endpoint is used to update an existing multi-choice single answer trivia question entry.

        <!-- theme: warning -->
        > **WARNING**
        > 
        > A trivia editor (NOT ADMIN) can only edit the same question a maximum of 3 times in 120 minutes.

        ### Flow

        ![Flow](https://docs-viaapi.s3.amazonaws.com/flow-charts/put.questions.mc.sa.uuid.png)
      security:
        - X-Api-Key: []
      parameters:
        - schema:
            type: string
          in: query
          name: uuid
          description: The UUID of the entry to be updated. This is used as an extra security measure and it should be equal to the UUID of the object provided within the request body.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./TriviaModels/TQMultiChoiceSingleVersionUpdate.v1.yaml
            examples:
              Example:
                value:
                  uuid: cfc21291-18f6-47cf-b714-ed87d150c076
                  status: a
                  banner:
                    path: batman-logo.jpg
                    type: i
                  difficultyLevel: 1
                  estimatedReadTime: 50
                  tags:
                    - title: movies
                      icon: movies.png
                      itemCount: 234
                  label:
                    audio: question-223423-2342342-2342.mp3
                    video: question-223423-2342342-2342.mp4
                    image: batman-logo.jpg
                    text: Who among these Hollywood stars have not played the Batman character?
      tags:
        - Panel
    delete:
      summary: Delete Existing Multi-Choice Single Answer Question
      operationId: delete-questions-mc-sa-uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example:
                  value:
                    code: '200.0000'
                    message: Your request has been successfully completed.
                    result:
                      pagination: null
                      set: true
                    sessionToken: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '401.0000'
                    message: 'You must register your application before accessing this endpoint. Please check your API key. If problem persists, you can contact our support team.'
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
                Example-9000:
                  value:
                    code: '401.9000'
                    message: You do not have enough permissions to access this feature.
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0100:
                  value:
                    code: '412.0100'
                    message: Preliminary data validation failed. Please check related service documentation.
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
                Example-9995:
                  value:
                    code: '412.9995'
                    message: The supplied path parameter is invalid or a required path parameter is missing.
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
      description: |-
        This endpoint is used to mark an existing entry as "deleted".

        ### Flow

        ![Flow](https://docs-viaapi.s3.amazonaws.com/flow-charts/delete.questions.mc.sa.uuid.png)
      security:
        - X-Api-Key: []
      tags:
        - Panel
    get:
      summary: Retrieve One Multi-Choice Single Answer Question
      operationId: get-questions-mc-sa-uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example:
                  value:
                    code: '200.0000'
                    message: Your request has been successfully completed.
                    result:
                      pagination: null
                      set:
                        uuid: cfc21291-18f6-47cf-b714-ed87d150c076
                        dateCreated: '2020-01-20T12:23:24Z'
                        dateUpdated: '2020-01-21T21:23:12Z'
                        status: a
                        banner:
                          path: batman-logo.jpg
                          type: i
                        difficultyLevel: 1
                        estimatedReadTime: 50
                        tags:
                          - title: movies
                            icon: movies.png
                            itemCount: 234
                        label:
                          audio: question-223423-2342342-2342.mp3
                          video: question-223423-2342342-2342.mp4
                          image: batman-logo.jpg
                          text: Who among these Hollywood stars have not played the Batman character?
                    sessionToken: null
                Example-0404:
                  value:
                    code: '200.0404'
                    message: No recods found matching your criteria.
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '401.0000'
                    message: 'You must register your application before accessing this endpoint. Please check your API key. If problem persists, you can contact our support team.'
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-9995:
                  value:
                    code: '412.9995'
                    message: The supplied path parameter is invalid or a required path parameter is missing.
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
      description: |-
        This endpoint is used to retrieve a selected multi-choice single answer trivia question.

        ### Flow
        ![Flow](https://docs-viaapi.s3.amazonaws.com/flow-charts/get.questions.mc.sa.uuid.png)
      security:
        - X-Api-Key: []
      tags:
        - Trivia
  '/question/{region}/mc/sa/{uuid}/status/{status}':
    parameters:
      - schema:
          type: string
        name: uuid
        in: path
        required: true
        description: UUID of the entry which is being updated.
      - schema:
          type: string
          enum:
            - a
            - d
            - i
            - r
            - w
        name: status
        in: path
        required: true
        description: |-
          Value of new status.

          Allowed values are:

          - a: active (approved)
          - d: deleted
          - i: inactive (approved but unpublished)
          - r: rejected
          - w: waiting for approval

          NOTE THAT values a, d, i, r can only be set by users with right permissions.
      - schema:
          type: string
          default: tr-tr
          enum:
            - tr-tr
            - en-us
        name: region
        in: path
        required: true
        description: 'see [documentation](https://archbee.io/public/3geArFXiTaFdM3kcfky7E/region-codes)'
    patch:
      summary: Update Status of Multi-Choice Single Answer Question
      operationId: patch-questions-mc-sa-uuid-status-status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0404:
                  value:
                    code: '200.0404'
                    message: No recods found matching your criteria.
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '401.0000'
                    message: 'You must register your application before accessing this endpoint. Please check your API key. If problem persists, you can contact our support team.'
                    result: null
                    sessionToken: null
                Example-9000:
                  value:
                    code: '412.9000'
                    message: You do not have enough permissions to access this feature.
                    result: null
                    sessionToken: null
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0004:
                  value:
                    code: '412.0004'
                    message: 'You must register your application before accessing this endpoint. Please check your API key. If problem persists, you can contact our support team.'
                    result: null
                    sessionToken: null
      description: |-
        This endpoint is used to update status of the question entry.

        - a: approved & activated
        - d: deleted
        - i: inactive

        ### Flow
        ![Flow](https://docs-viaapi.s3.amazonaws.com/flow-charts/patch.question.mc.sa.uuid.status.status.png)
      security:
        - X-Api-Key: []
      parameters:
        - schema:
            type: string
            enum:
              - a
              - i
              - d
          in: query
          name: status
          description: The new status of the entry.
          required: true
      tags:
        - Panel
  '/tags/{region}/merge':
    parameters:
      - schema:
          type: string
        name: region
        in: path
        required: true
    patch:
      summary: Merge Tags
      operationId: patch-tags-region-merge
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '200.0000'
                    message: Your request has been successfully completed.
                    result: 'null'
                    set: 'null'
      tags:
        - Trivia
      description: Use this operation to merge one tag into another. Merging means removing the tag and associating all questions related to deleted tag with the merged tag.
      parameters:
        - schema:
            type: string
            format: uuid
          in: query
          name: tag
          description: Tag to be merged.
          required: true
        - schema:
            type: string
            format: uuid
          in: query
          name: into
          description: Tag which will remain after the opration.
          required: true
  '/question/{region}/mc/sa':
    parameters:
      - schema:
          type: string
        name: region
        in: path
        required: true
    post:
      summary: Create New Multi-Choice Single Answer Question
      operationId: post-questions-mc-sa
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example:
                  value:
                    code: '200.0000'
                    message: Your request has been successfully completed.
                    result:
                      pagination: null
                      set: 3222
                    sessionToken: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '401.0000'
                    message: 'You must register your application before accessing this endpoint. Please check your API key. If problem persists, you can contact our support team.'
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
                Example-9000:
                  value:
                    code: '401.9000'
                    message: 'You do not have enough permissions to access this feature. '
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-7000:
                  value:
                    code: '412.7000'
                    message: 'You have supplied an invalid data. Please check releated documentation, fix all your issues and try again. If the problem persists, you can contact our support team.'
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
      description: |
        This endpoint is used to create a new multi-choice single answer trivia question entry.

        <!-- theme: warning -->
        > **WARNING**:
        > 
        >A trivia editor (NOT ADMIN) can only edit the same question a maximum of 3 times in 120 minutes.

        ### Flow
        ![Flow](https://docs-viaapi.s3.amazonaws.com/flow-charts/post.questions.mc.sa.png)
      security:
        - X-Api-Key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./TriviaModels/TQMultiChoiceSingleVersionCreate.v1.yaml
            examples:
              Example:
                value:
                  banner:
                    path: batman-logo.jpg
                    type: i
                  difficultyLevel: 1
                  estimatedReadTime: 50
                  tags:
                    - '#23:42'
                  label:
                    audio: question-223423-2342342-2342.mp3
                    video: question-223423-2342342-2342.mp4
                    image: batman-logo.jpg
                    text: Who among these Hollywood stars have not played the Batman character?
        description: ''
      tags:
        - Panel
  '/tag/{region}/{uuid}':
    parameters:
      - schema:
          type: string
        name: region
        in: path
        required: true
      - schema:
          type: string
        name: uuid
        in: path
        required: true
    get:
      summary: Update Existing Trivia Tag
      tags:
        - Trivia
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '200.0000'
                    message: Your request has been successfully completed.
                    result:
                      pagination:
                        isCircular: true
                        prevLink: null
                        nextLink: offset=10&limit=10
                        lastLink: offset=90&limit=10
                        firstLink: offset=0&limit=10
                        totalItems: 1000
                        filteredItems: 1
                        itemsPerPage: 1
                        pageCount: 1
                        currentPage: 1
                      set:
                        icon: soccer.svg
                        title: soccer
                        itemCount: 2322
                        uuid: b914edfb-dadb-49f0-a729-08e882987e38
                    sessionToken: null
      operationId: get-tag-region-uuid
      description: Use this endpoint to retrieve one trivia tag by its uuid.
    put:
      summary: Update Existing Trivia Tag
      operationId: put-tag-region-uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '200.0000'
                    message: Your request has been successfully completed.
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
      description: Use this endpoint to make changes on an existing trivia tag.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./TriviaModels/TQTag.v1.yaml
            examples:
              Example-0000:
                value:
                  icon: cinema.svg
                  title: cinema
                  itemCount: 150
                  uuid: 095be615-a8ad-4c33-8e9c-c7612fbf6c9f
        description: Body must have a sing TQTag object.
      tags:
        - Trivia
    delete:
      summary: ''
      operationId: delete-tag-region-uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '200.0000'
                    message: Your request has been successfully completed.
                    result:
                      pagination: null
                      set: null
                    sessionToken: null
      tags:
        - Trivia
      description: Use this endpoint to mark an existing trivia tag entry as deleted.
  '/tag/{region}':
    parameters:
      - schema:
          type: string
        name: region
        in: path
        required: true
        description: Region maps the database  where the operation will be performed.
    post:
      summary: Create New Tag
      operationId: post-tag-region
      responses:
        '200':
          description: 'When the creation process is successful, the uuid of the created record.'
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '200.0000'
                    message: Your request has been successfully completed.
                    result:
                      pagination: 'null'
                      set: 5f7ae654f49cb6078151b14a
                    sessionToken: null
      description: Use this endpoint to create a new trivia tag entry.
      requestBody:
        content:
          application/json:
            schema:
              $ref: ./TriviaModels/TQTag.v1.yaml
            examples:
              Example-0000:
                value:
                  icon: cinema.svg
                  title: cinema
                  itemCount: 150
        description: Holds TQTag object without the system given id.
      tags:
        - Trivia
  '/feed/stats/{region}/choices':
    parameters:
      - schema:
          type: string
        name: region
        in: path
        required: true
    post:
      summary: Feed Stats Of Choices
      operationId: post-feed-stats-region-choices
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0000:
                  value:
                    code: '200.0000'
                    message: Your request has been successfully completed.
                    result:
                      pagination: null
                      set: true
                    sessionToken: null
        '412':
          description: Precondition Failed
          content:
            application/json:
              schema:
                $ref: ./GenericModels/ApiResponse.v1.yaml
              examples:
                Example-0007:
                  value:
                    code: '412.0007'
                    message: '{{ field }} is required. Please supply a value for this parameter.'
                    sessionToken: 17ec7d1966adf542cd2c2e1f1800223b0cc4880434942786a089ba6504bca7c7
                    result:
                      pagination: null
                      set: null
                Example-9999:
                  value:
                    code: '412.9999'
                    message: 'The value, operands, or options are not valid for the email. Please check related documentation for more information.'
                    sessionToken: 17ec7d1966adf542cd2c2e1f1800223b0cc4880434942786a089ba6504bca7c7
                    result:
                      pagination: null
                      set: null
      tags:
        - Trivia
      description: Provides to feed choices selection stats by authorized client.
      security:
        - X-Api-Key: []
      requestBody:
        content:
          application/json:
            schema:
              description: ''
              type: object
              properties:
                startedAt:
                  type: string
                  minLength: 1
                endedAt:
                  type: string
                  minLength: 1
                choices:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  items:
                    required:
                      - question
                      - correctChoice
                    properties:
                      question:
                        type: string
                        minLength: 1
                      correctChoice:
                        type: string
                        minLength: 1
                      stats:
                        type: object
                        properties:
                          choiceA:
                            type: number
                          choiceB:
                            type: number
                          choiceC:
                            type: number
                          choiceD:
                            type: number
                        required:
                          - choiceA
                          - choiceB
                          - choiceC
                          - choiceD
              required:
                - startedAt
                - endedAt
                - choices
            examples:
              Example:
                value:
                  startedAt: '2021-02-05 00:00:00'
                  endedAt: '2021-02-06 00:00:00'
                  choices:
                    - question: 5fbfa2c8796ca719195e91e4
                      correctChoice: choiceA
                      stats:
                        choiceA: 2000
                        choiceB: 2000
                        choiceC: 1000
                        choiceD: 800
externalDocs:
  url: 'https://api.docs.viaapi.com'
components:
  securitySchemes:
    X-Api-Key:
      type: apiKey
      in: header
      name: API Key
      description: 'This is required for application access control. This is the API key defined for your application in your account page at https://www.viaapi.com/my-account/applications'
    X-Session-Token:
      name: Session Token
      type: apiKey
      in: header
      description: 'This token is required to authenticate "real" users. This token will be assigned and supplied to you dynamically only after successful login using a username-password combination or social media login method. Once - and if - you get this token, you must supplies this token to access data provided by ViaAPI.'
  schemas: {}
