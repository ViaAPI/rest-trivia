openapi: 3.0.0
info:
  title: ViaAPI Authentication
  version: v1.0.0
  description: This documentation covers all endpoints related to authentication of  users to various ViaAPI panels including client portal and administration panel.
  termsOfService: 'https://www.viaapi.com/legal/tos/trivia'
  contact:
    name: System Administrator
    email: admin@viaapi.com
    url: 'https://www.viaapi.com'
  license:
    name: Trivia
    url: 'https://www.viaapi.com/legal/licensing/trivia'
paths:
  /login:
    post:
      summary: ''
      operationId: post-login
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                Example:
                  value:
                    code: '200.0401'
                    message: You have been successfully logged in.
                    result:
                      pagination: null
                      set: true
                    sessionToken: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                Example-0002:
                  value:
                    code: '401.0002'
                    message: 'Please check your username and password, and try again.'
                    result:
                      pagination: null
                      set: true
                    sessionToken: null
                Example-0003:
                  value:
                    code: '401.0003'
                    message: You have failed to login many times. Your account is susspended for 2 hours. You have been sent a security key to your primary contact option. You can either wait 2 hours or you can follow the instructions provided.
                    result:
                      pagination: null
                      set: true
                    sessionToken: null
                Example-0000:
                  value:
                    code: '401.0000'
                    message: 'You must register your application before accessing this endpoint. Please check your API key. If problem persists, you can contact our support team.'
                    result:
                      pagination: null
                      set: true
                    sessionToken: null
      description: This endpoint is used to authenticate admin / client users with their username and password.
      security:
        - X-Api-Key: []
        - X-Session-Token: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginForm'
            examples:
              Example:
                value:
                  email: member@maildrop.cc
                  password: 123verysecure321...
                  termsAccepted: true
      tags:
        - Login
        - Authentication
        - Account
  /logout:
    post:
      summary: ''
      operationId: post-logout
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
              examples:
                Example:
                  value:
                    code: '200.0402'
                    message: You have been successfully logged out.
                    result:
                      pagination: null
                      set: true
                    sessionToken: null
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: ./trivia.v1.yaml#/components/schemas/ApiResponse
              examples:
                Example-0001:
                  value:
                    code: '401.0001'
                    message: Your session is expired. Please re-login.
                    result:
                      pagination: null
                      set: true
                    sessionToken: null
      description: This endpoint is used for self-logout.
      security:
        - X-Api-Key: []
        - X-Session-Token: []
      tags:
        - Login
        - Account
        - Authentication
  /password/reset/request:
    post:
      summary: Your GET endpoint
      tags:
        - Login
        - Authentication
      responses:
        '200':
          description: OK
      operationId: get-password-reset-request
      description: Use this endpoint to start a password reset request.
      security:
        - X-Api-Key: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequestForm'
            examples:
              Example:
                value:
                  username: '905325554433'
                  deliveryMethod: sms
        description: ''
  '/password/reset/confirm/{confirmationKey}':
    post:
      summary: Your GET endpoint
      tags:
        - Login
        - Account
      responses:
        '200':
          description: OK
      operationId: get-password-reset-confirm
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirmForm'
            examples:
              Example:
                value:
                  username: '905325554433'
                  deliveryMethod: sms
      description: Using this endpoint you can let the user set a new password for her/his account.
      security:
        - X-Api-Key: []
    parameters:
      - schema:
          type: string
        name: confirmationKey
        in: path
        required: true
  '/account/activate/{activationKey}':
    get:
      summary: Your GET endpoint
      tags:
        - Account
      responses:
        '200':
          description: OK
      operationId: get-account-confirm
      description: |-
        This endpoint is used to activate new accounts. Activation key & link will be sent to the account using one of the following channels:

        - E-Mail
        - SMS
      security:
        - X-Api-Key: []
      parameters: []
    parameters:
      - schema:
          type: string
          default: Jq1Xyr9f
        name: activationKey
        in: path
        required: true
        description: An 8 character long key that includes alphanumeric characters.
components:
  schemas:
    ApiResponse:
      title: ApiResponse
      type: object
      description: This is the standart response object. All of your request to ViaAPI will return this object.
      properties:
        result:
          $ref: '#/components/schemas/ApiResult'
        sessionToken:
          type: string
          description: 'This is the session token, and it will only revealed if user logs in the system with username and password, or if an already logged-in user needs to refresh its existing token.'
          example: 1a79a4d60de6718e8e5b326e338ae533
          nullable: true
        code:
          type: string
          example: '200.0000'
          description: 'This is the API''s internal response code. The first part equals to HTTP response code, the second part is used to match more specific causes.'
        message:
          type: string
          description: This is the API's internal response message.
          example: ' Your request has been successfully completed.'
      required:
        - code
        - message
      x-tags:
        - response
      x-examples:
        Example:
          code: '200.0000'
          message: ''
          result:
            pagination:
              isCircular: true
              prevLink: null
              nextLink: offset=10&limit=10
              lastLink: offset=90&limit=10
              firstLink: offset=0&limit=10
              totalItems: 100
              itemsPerPage: 10
              pageCount: 10
              currentPage: 1
          set: true
    ApiResult:
      title: ApiResult
      type: object
      description: 'If response returns a result, the result set will be stored here alongsite with any available pagination information.'
      x-tags:
        - response
      x-examples:
        Example:
          pagination: null
          set:
            uuid: cfc21291-18f6-47cf-b714-ed87d150c076
            dateCreated: '2020-01-20T12:23:24Z'
            dateUpdated: '2020-01-21T21:23:12Z'
            status: a
            banner:
              path: batman-logo.jpg
              type: i
            difficultyLevel: 1
            estimatedReadTime: 50
            tags:
              - title: movies
                icon: movies.png
                itemCount: 234
            label:
              audio: question-223423-2342342-2342.mp3
              video: question-223423-2342342-2342.mp4
              image: batman-logo.jpg
              text: Who among these Hollywood stars have not played the Batman character?
      properties:
        pagination:
          $ref: '#/components/schemas/ApiPagination'
        set:
          anyOf:
            - type: array
              items:
                anyOf:
                  - type: boolean
                  - type: number
                  - type: string
                  - type: integer
            - type: boolean
          description: This is the result object of the object. It contains the actual result set and a pagination instruction if pagination is needed.
    ApiPagination:
      title: ApiPagination
      type: object
      description: 'If the result set is a list, then this object will guide you to paginate the result set. Note that a limit enforcement is in effect even if you do not provide a limit to the result set.'
      x-examples:
        Example:
          isCircular: true
          prevLink: null
          nextLink: offset=10&limit=10
          lastLink: offset=90&limit=10
          firstLink: offset=0&limit=10
          totalItems: 100
          itemsPerPage: 10
          pageCount: 10
          currentPage: 1
      x-tags:
        - response
      properties:
        isCircular:
          description: 'If set to true, pagination''s next page link points the first page of collection.'
          type: boolean
          example: true
          default: true
        prevLink:
          description: The query string that is required to obtain the previous page's items.
          example: offset=9&limit=50
          type: string
          nullable: true
        nextLink:
          description: The query string that is required to obtain the next page's items.
          example: offset=1&limit=50
          type: string
          nullable: true
        lastLink:
          description: The query string that is required to obtain the last page's items.
          example: offset=10&limit=50
          type: string
          nullable: true
        firstLink:
          description: The query string that is required to obtain the first page's items.
          example: offset=0&limit=50
          type: string
          nullable: true
        totalItems:
          description: Number of total items based on given filter.
          example: 500
          type: integer
          minimum: 1
          format: int32
        itemsPerPage:
          description: Number of results to be shown at each request. This is calculated base on the parameters submitted by request.
          example: 50
          type: integer
          minimum: 1
          format: int32
        pageCount:
          description: Total number of pages. This is calculated base on the parameters submitted by request.
          example: 1
          type: integer
          default: 1
          minimum: 1
          format: int32
        currentPage:
          description: Current page number. This is calculated base on the parameters submitted by request.
          example: 1
          type: integer
          default: 1
          minimum: 1
          format: int32
      required:
        - isCircular
        - prevLink
        - nextLink
        - lastLink
        - firstLink
        - totalItems
        - itemsPerPage
        - pageCount
        - currentPage
    Language:
      title: Language
      type: object
      description: Represents a language entry / definition.
      properties:
        id:
          type: integer
          description: System given identification number.
          minimum: 1
        status:
          type: string
          enum:
            - a
            - d
            - i
          example: a
          description: |-
            Entry status.

            - a: active
            - d: deleted
            - i: inactive
        createdAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Creation timestamp of the entry.
        updatedAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Timestamp of the last update of entry.
        name:
          type: string
          description: 'Name of language. This hould be written in the original language. i.e. Türkçe for Turkish, English for English and Deutsch for German.'
          example: Türkçe
        slug:
          type: string
          example: turkce
          description: |-
            This should be auto generated from the name. All foreign characters and special characters should be removed. Punctioation and spaces must be replaced with -. All characters must be converted to lower case.

            i.e. Türkçe should become turkce, British English should become british-english.
        code:
          type: string
          description: Official ISO code.
          example: tr-tr
        direction:
          type: string
          enum:
            - ltr
            - rtl
            - ttb
            - btt
          example: ltr
          description: |-
            This is the writing direction of the script that language uses.

            - ltr: left-to-right
            - rtl: right-to-left
            - ttb: top-to-botttom
            - btt: bottom-to-top

            Default value is "ltr".
      required:
        - name
        - code
        - direction
      x-examples:
        EXAMPLE-GET:
          id: 232
          status: a
          createdAt: '2020-03-03T10:18:28+03:00'
          updatedAt: '2020-03-03T10:18:28+03:00'
          name: Türkçe
          slug: turkce
          code: tr-tr
          direction: ltr
        EXAMPLE-POST:
          name: Türkçe
          code: tr-tr
          direction: ltr
      x-tags:
        - Multi-Language Support
    AdminUser:
      title: AdminUser
      type: object
      description: This is the admin user representation.
      x-tags:
        - Administration
      properties:
        id:
          type: integer
          description: System identification number.
          example: 3422
          minimum: 1
        uuid:
          type: string
          format: uuid
          example: 8424cb34-5d4a-11ea-bc55-0242ac130003
          description: Global system definition id.
        status:
          type: string
          enum:
            - a
            - i
            - d
          example: a
          description: Record status.
        createdAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Record creation time.
        updatedAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Last update time of record.
        email:
          type: string
          format: email
          example: info@bodevoffice.com
          description: E-mail of the admin user.
        mobileNumber:
          type: string
          example: +90-532-532-3232
          description: E-mail of the admin user.
        password:
          type: string
          example: s0m3PasZwO4d!
          description: User's password.
        isSuper:
          type: boolean
          example: false
          description: Indicates wheter this user is super user. A super user status overrides all of user's permissions and gives the user access to all functionalities.
        consecutiveFailedLoginAttempts:
          type: integer
          description: The count of the recent failed login tries. The value resets to 0 when the user successfully logs into system.
          example: 2
          minimum: 0
        lockedAt:
          type: string
          description: Date when the user is locked out of the system.
          example: '2020-03-03T10:18:28+03:00'
      required:
        - email
        - mobileNumber
      x-examples:
        EXAMPLE-GET:
          id: 2323
          uuid: b8397c16-5d4b-11ea-bc55-0242ac130003
          status: a
          createdAt: '2020-03-03T10:18:28+03:00'
          updatedAt: '2020-03-03T10:18:28+03:00'
          email: no-reply@bodevoffice.com
          mobileNumber: +90-532-532-3232
          isSuper: false
          consecutiveFailedLoginAttempts: 2
          lockedAt: null
        EXAMPLE-POST:
          email: no-reply@bodevoffice.com
          mobileNumber: +90-532-532-3232
          isSuper: false
          password: 5oM3p@S5w04D!
    FailedLoginAttempt:
      title: FailedLoginAttempt
      type: object
      description: This is the admin user representation.
      x-tags:
        - Administration
        - Client Portal
      x-examples:
        EXAMPLE-GET:
          id: 4322
          happenedAt: '2020-03-03T10:18:28+03:00'
          reason: p
          user: 322
          ipAddress: 127.0.0.1
          notes: Brute force trial detected.
      properties:
        id:
          type: integer
          description: System identification number.
          example: 3422
          minimum: 1
        happenedAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Time when the login attempt failed.
        reason:
          type: string
          description: |-
            The reason why the user is logged.

            - p: invalid password.
            - s: system error
            - u: invalid username
          enum:
            - p
            - s
            - u
          example: p
        user:
          type: integer
          description: User who failed to login.
          example: 321
          minimum: 1
        ipAddress:
          type: string
          description: User's password.
          format: ipv4
          example: 127.0.0.1
        notes:
          type: string
          description: Admin or system notes on the attempt.
          example: Brute force attempt detected.
      required:
        - reason
        - user
    AdminUserGroup:
      title: AdminUserGroup
      type: object
      description: 'This model represents user groups. User groups are used to group users into smaller subsets. For example, admin group will only show users identified as admin; however !!! user groups MUST NOT be connected to role system.'
      x-tags:
        - Administration
      x-examples:
        EXAMPLE-GET:
          id: 42
          status: a
          createdAt: '2020-03-03T10:18:28+03:00'
          updatedAt: '2020-03-03T10:18:28+03:00'
          localizations:
            - userGroup: 42
              language: 3
              title: Admnistrators
              slug: administrators
              description: Administrators can do many things.
        EXAMPLE-POST:
          localizations:
            - language: 3
              title: Admnistrators
              slug: administrators
              description: Administrators can do many things.
      properties:
        id:
          type: integer
          description: System identification number.
          example: 3422
          minimum: 1
        status:
          type: string
          enum:
            - a
            - i
            - d
          example: a
          description: Record status.
        createdAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Record creation time.
        updatedAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Last update time of record.
        localizations:
          type: array
          items:
            $ref: '#/components/schemas/AdminUserGroupI18n'
    AdminUserGroupI18n:
      title: AdminUserGroupI18n
      type: object
      description: Holds localized meta data of AdminUserGroup model.
      x-tags:
        - Administration
      x-examples:
        EXAMPLE-GET:
          userGroup: 11
          language: 3
          title: Admnistrators
          slug: administrators
          description: Administrators can do many things.
        EXAMPLE-POST:
          userGroup: 11
          language: 3
          title: Admnistrators
          slug: administrators
          description: Administrators can do many things.
      properties:
        userGroup:
          type: integer
          description: ID of the user group that the localized value belongs to.
          example: 3422
          minimum: 1
        language:
          type: integer
          description: ID of the localization language.
          example: 1
          minimum: 1
        title:
          type: string
          description: Localized name of the user group.
          example: Administrators
        slug:
          type: string
          description: This value is auto-generated.
          example: administrators
        description:
          type: string
          description: User entered description of this user group.
          example: Global admin has all rights.
    RoleI18n:
      title: RoleI18n
      type: object
      description: Holds localized meta data of Role model.
      x-tags:
        - Administration
      x-examples:
        EXAMPLE-GET:
          role: 11
          language: 1
          description: Permits creation of a new trivia definition.
        EXAMPLE-POST:
          role: 11
          language: 1
          description: Permits creation of a new trivia definition.
      properties:
        role:
          type: integer
          description: ID of the role that the localized value belongs to.
          example: 3422
          minimum: 1
        language:
          type: integer
          description: ID of the localization language.
          example: 1
          minimum: 1
        description:
          type: string
          description: User entered description of this user group.
          example: Global admin has all rights.
    Role:
      title: Role
      type: object
      description: This model represents role entries.
      x-tags:
        - Administration
      x-examples:
        EXAMPLE-GET:
          id: 42
          status: a
          createdAt: '2020-03-03T10:18:28+03:00'
          updatedAt: '2020-03-03T10:18:28+03:00'
          roleKey: trivia.create
          localizations:
            - role: 42
              language: 1
              description: Permits creation of a new trivia definition.
        EXAMPLE-POST:
          roleKey: trivia.create
          localizations:
            - language: 1
              description: Permits creation of a new trivia definition.
      properties:
        id:
          type: integer
          description: System identification number.
          example: 3422
          minimum: 1
        status:
          type: string
          enum:
            - a
            - i
            - d
          example: a
          description: Record status.
        createdAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Record creation time.
        updatedAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Last update time of record.
        localizations:
          type: array
          items:
            $ref: '#/components/schemas/RoleI18n'
        roleKey:
          type: string
          description: Role key is used in the app code.
          example: trivia.create
      required:
        - roleKey
    RoleGroupI18n:
      title: RoleGroupI18n
      type: object
      description: Holds localized meta data of RoleGroup model.
      x-tags:
        - Administration
      x-examples:
        EXAMPLE-GET:
          userGroup: 11
          language: 3
          title: Trivia Administration
          slug: trivia-administration
          description: Trivia admin roles.
        EXAMPLE-POST:
          userGroup: 11
          language: 3
          title: Trivia Administration
          description: Trivia Admin Roles
      properties:
        roleGroup:
          type: integer
          description: ID of the role group that the localized value belongs to.
          example: 3422
          minimum: 1
        language:
          type: integer
          description: ID of the localization language.
          example: 1
          minimum: 1
        title:
          type: string
          description: Localized name of the user group.
          example: Administrators
        slug:
          type: string
          description: This value is auto-generated.
          example: administrators
        description:
          type: string
          description: User entered description of this user group.
          example: Global admin has all rights.
    RoleGroup:
      title: RoleGroup
      type: object
      description: This model represents role groups.
      x-tags:
        - Administration
      x-examples:
        EXAMPLE-GET:
          id: 42
          status: a
          createdAt: '2020-03-03T10:18:28+03:00'
          updatedAt: '2020-03-03T10:18:28+03:00'
          localizations:
            - userGroup: 42
              language: 3
              title: Admnistrators
              slug: administrators
              description: Administrators can do many things.
        EXAMPLE-POST:
          localizations:
            - language: 3
              title: Admnistrators
              slug: administrators
              description: Administrators can do many things.
      properties:
        id:
          type: integer
          description: System identification number.
          example: 3422
          minimum: 1
        status:
          type: string
          enum:
            - a
            - i
            - d
          example: a
          description: Record status.
        createdAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Record creation time.
        updatedAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Last update time of record.
        localizations:
          type: array
          items:
            $ref: '#/components/schemas/RoleGroupI18n'
    PasswordRecoveryRequest:
      title: PasswordRecoveryRequest
      type: object
      description: Represent password recovery request entries.
      properties:
        id:
          type: integer
          example: 32
          minimum: 1
          description: System identification number.
        createdAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Timestamp of record's creation date.
        updatedAt:
          type: string
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
          description: Date when the record is last updated.
        expirationDate:
          type: string
          description: 'The expiration date and time of the request. If the request hasn''t finalied by this time, it will not be valid anymore.'
          format: date-time
          example: '2020-03-03T10:18:28+03:00'
        status:
          type: string
          enum:
            - a
            - u
          example: a
          description: |-
            - a: active
            - u: used
        user:
          type: integer
          example: 4353
          minimum: 1
          description: The system id number of the user who requested the password recovery.
        recoveryKey:
          type: string
          example: zWqp321tH
          description: The recovery key assigned to this request.
      required:
        - expirationDate
      x-examples:
        EXAMPLE-GET:
          id: 1231200
          createdAt: '2020-03-03T10:18:28+03:00'
          updatedAt: '2020-03-03T10:18:28+03:00'
          expirationDate: '2020-03-03T11:18:28+03:00'
          status: a
          user: 23239
          recoveryKey: zWqp321tH
        EXAMPLE-POST:
          expirationDate: '2020-03-03T11:18:28+03:00'
          user: 23239
      x-tags:
        - Administration
        - Client Portal
    LoginForm:
      title: LoginForm
      type: object
      description: Represents login form and holds login related information.
      properties:
        email:
          type: string
          description: E-mail of the registered user.
          format: email
          example: member@maildrop.cc
        password:
          type: string
          description: User's password.
        termsAccepted:
          type: boolean
          example: false
          description: Users selection about user agreement.
      required:
        - email
        - password
      x-examples:
        Example:
          username: member@maildrop.cc
          password: 123xyz
          termsAccepted: true
    PasswordResetRequestForm:
      title: PasswordResetRequestForm
      type: object
      description: Represents password reset request form.
      properties:
        username:
          type: string
          description: 'E-mail, or phone number of the user who wants to reset her/his password.'
          example: member@mailinator.com
        deliviryMethod:
          type: string
          description: sms or email.
          enum:
            - sms
            - email
          example: sms
      required:
        - username
        - deliviryMethod
      x-examples:
        Example:
          username: '905325554433'
          deliveryMethod: sms
      x-tags:
        - Login
    PasswordResetConfirmForm:
      title: PasswordResetConfirmForm
      type: object
      description: Represents password reset request confirmation form.
      properties:
        confirmationCode:
          type: string
          description: Reset confirmation code
          example: aR09oXxq
        password:
          type: string
          description: User's new password.
          example: th15_is_v3rY_s3cU4E
      required:
        - confirmationCode
        - password
      x-examples:
        Example:
          confirmationCode: aR09oXxq
          password: th15_is_v3rY_s3cU4E
      x-tags:
        - Login
  securitySchemes:
    X-Api-Key:
      type: apiKey
      in: header
      name: API Key
      description: 'This is required for application access control. This is the API key defined for your application in your account page at https://www.viaapi.com/my-account/applications'
    X-Session-Token:
      name: Session Token
      type: apiKey
      in: header
      description: 'This token is required to authenticate "real" users. This token will be assigned and supplied to you dynamically only after successful login using a username-password combination or social media login method. Once - and if - you get this token, you must supplies this token to access data provided by ViaAPI.'
tags:
  - name: trivia
  - name: panel-trivia
  - name: Login
  - name: Authentication
  - name: Account
servers:
  - url: 'https://auth.api.viaapi.com/v1.0'
    description: Production
  - url: 'https://auth.api.dev.viaapi.com/v1.0'
    description: Development / Testing Server
externalDocs:
  url: 'https://api.docs.viaapi.com'
